// ////1.What will be output the following print statement in js  console.log("hari\"".length)
// // let sname ="Hari\""
// // console.log(sname.length); //prints the length of the string


function capitalizeWords(sentence) {// Split the sentence into an array of words
    let words = sentence.split(" ");// Initialize an array to store capitalized words
    let capitalizedWords = [];// Iterate through each word in the array
    for (let word of words) {// Capitalize the first letter of the word and concatenate with the rest of the word
        
        let capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);// Push the capitalized word to the array
        capitalizedWords.push(capitalizedWord);
    }
    
    // Join the capitalized words into a single string with spaces
    let capitalizedSentence = capitalizedWords.join(" ");
    
    // Return the capitalized sentence
    return capitalizedSentence;
}



// console.log(capitalizeWords("hello world")); // Output: "Hello World"

//9.Implement a function to perform basic string compression using the counts of repeated characters. For example, the string "aabcccccaaa" would become "a2b1c5a3.â€œ
//let str = "sshhhhaaana";
//let compressedString = "";

//let currentChar = str[0];
//let count = 1;

for (let i = 1; i <= str.length; i++) {
    if (str[i] === currentChar) {
        count++;
    } else {
        compressedString += currentChar + count;
        currentChar = str[i];
        count = 1;
    }
}

// Output the compressed string only if it's shorter than the original
//let compressedResult = compressedString.length < str.length ? compressedString : str;
console.log(compressedResult); // Output: "a2b1c5a3"




//10. Implement a basic string compression without creating a separate function. Use loops and conditional statements to create the compressed string.
let str = "aabcccccaaa";
let compressedString = "";

let currentChar = str[0];
let count = 1;

for (let i = 1; i <= str.length; i++) {
    if (str[i] === currentChar) {
        count++;
    } else {
        compressedString += currentChar + count;
        currentChar = str[i];
        count = 1;
    }
}

// Output the compressed string only if it's shorter than the original
let compressedResult = compressedString.length < str.length ? compressedString : str;
console.log(compressedResult); // Output: "a2b1c5a3"